{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","previous","setPrevious","current","setCurrent","recentNum","setRecentNum","operator","setOperator","subtotal2","setSubTotal2","handleNumber","value","target","pattern","RegExp","str","test","prev","toString","ReplaceOperations","fixing","console","log","replace","justDoIt","operation","subT","a","b","handleOperations","className","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b229db2e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\n\r\nfunction App() {\r\n  // previous and current are used in the displays, recentNum is a placeholder for the last number entered\r\n  // usereducer used for doing the math operations, it does the recent entered math and keeps the subtotal\r\n  // subtotal also holds the last math operation and takes care of equal and AllClear\r\n  const [previous, setPrevious] = useState(\"\");\r\n  const [current, setCurrent] = useState(\"0\");\r\n  const [recentNum, setRecentNum] = useState(\"\");\r\n  const [operator, setOperator] = useState(\"\");\r\n  const [subtotal2, setSubTotal2] = useState(0)\r\n\r\n  const handleNumber = ({ target: { value } }) => {\r\n    let pattern = new RegExp(/^-?\\d+\\.?\\d*$/);\r\n    //if calculator is in initial state, when current = 0 & recentNum is empty, then overwrite the zero\r\n    //or also take care of when a number starts with a '-'\r\n    //test new input is valid\r\n    let str =\r\n      current === \"0\" && recentNum === \"\" && value === \".\"\r\n        ? current + value\r\n        : current === \"0\" && recentNum === \"\"\r\n        ? value\r\n        : value === \"-\"\r\n        ? value\r\n        : current + value;\r\n\r\n    if (pattern.test(str) || str === \"-\") {\r\n      //test for initial state\r\n      if (operator === \"\" && recentNum === \"\" && current === \"0\") {\r\n        setCurrent(str);\r\n         setRecentNum(str);\r\n        // test for initial state after first zero\r\n      } else if (\r\n        operator === \"\" && recentNum === \"0\" && current === \"0\") {\r\n        setCurrent((prev) => (value === \".\" ? prev + value : prev));\r\n        setRecentNum((prev) => (value === \".\" ? prev + value : prev));\r\n        //initial state after an equals was executed\r\n        // disallow typing numbers AFTER an equal has been exectuted\r\n      } else if (subtotal2.toString() === current && recentNum === \"0\") {\r\n        return;\r\n      } else {\r\n        setCurrent((prev) => prev + value);\r\n        setRecentNum((prev) => prev + value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const ReplaceOperations = (fixing) => {\r\n    console.log(fixing)\r\n     return (\r\n      fixing.replace(/[-/*+]\\+/, \"+\")\r\n    .replace(/[-+*/]\\//, \"/\")\r\n    .replace(/[-/+*]\\*/, \"*\")\r\n    .replace(\"--\", \"+\").replace(\"+-\", \"-\")\r\n    )\r\n  }\r\n\r\n  const ClearAllCleanup = () => {\r\n    setPrevious( \"\")\r\n    setCurrent(\"0\");\r\n    setRecentNum( \"\");\r\n    setSubTotal2(0)\r\n    setOperator(\"\")\r\n    };\r\n\r\n  const justDoIt = (operation) => {\r\n        const operators = {\r\n      \"+\": function (a, b) {return a + b},\r\n      \"-\": function (a, b) {return a - b},\r\n      \"*\": function (a, b) {return a * b},\r\n      \"/\": function (a, b) {return a / b},\r\n    };\r\n\r\n    let subT = operators[operator](subtotal2, +recentNum);\r\n    if (operation === \"=\") {\r\n      setSubTotal2(subT);\r\n      setOperator(\"=\");\r\n      setRecentNum(\"\");\r\n      setPrevious((prev) =>\r\n        ReplaceOperations(prev + `${recentNum}${operation}${subT}`)\r\n      );\r\n      setCurrent(() => subT);\r\n    } else {\r\n      setSubTotal2(subT);\r\n      setOperator(operation);\r\n      setRecentNum(\"\")\r\n      setPrevious((prev) =>\r\n        ReplaceOperations(prev + `${recentNum}${operation}`)\r\n      );\r\n      setCurrent(() => \"\");    \r\n    }     \r\n  } \r\n  \r\n  const handleOperations = ({ target: { value } }) => {\r\n  let pat =/[=+*/]/\r\n    if (previous === \"\" ) {\r\n      setSubTotal2(prev => prev + +recentNum)\r\n      setOperator(value);\r\n      setRecentNum(\"\");\r\n      setPrevious((prev) =>\r\n              ReplaceOperations(prev + `${recentNum}${value}`)\r\n            );\r\n      setCurrent(() => \"\");\r\n    } else if (pat.test(operator) && (recentNum === \"\"|| recentNum === \"-\")) {\r\n     setPrevious(subtotal2 + value)\r\n      setOperator(value);\r\n     setCurrent(() => \"\");\r\n     setRecentNum(\"\")\r\n    } else {\r\n       justDoIt(value)\r\n    }}\r\n\r\n const handleEqual =() => {\r\n    if (recentNum ===\"\" && operator ===\"\") {\r\n      return;\r\n    } else if (recentNum !==\"\" && operator ===\"\"){\r\n      setPrevious(`${recentNum}=${recentNum}`)\r\n    } else if (recentNum ===\"\" && operator !==\"\"){\r\n      setPrevious((prev) =>ReplaceOperations (prev + `${recentNum}=${subtotal2}`));\r\n      setCurrent(() => `${subtotal2}`);\r\n      setRecentNum(() => \"0\");\r\n    } else {\r\n      justDoIt(\"=\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      {/* Used in development\r\n      <br />\r\n      <br />\r\n      <br />\r\n      subtotal {subtotal2}\r\n      <br />\r\n      Recent operation {operator} <br />\r\n      Recent Number {recentNum} */}\r\n      \r\n      <div className='grid-container'>\r\n        <div className='display display-main span-4'>{previous}</div>\r\n        <div className='display display-second span-4' id='display'>\r\n          {current}\r\n        </div>\r\n        <button className='function clear span-2' id='clear' onClick={ClearAllCleanup}>AC</button>\r\n        <button className='function' id='divide' value='/' onClick={handleOperations}>/</button>\r\n        <button className='function' id='multiply' value='*' onClick={handleOperations}>X</button>\r\n        <button className='numbers' id='seven' value='7' onClick={handleNumber}>7</button>\r\n        <button className='numbers' id='eight' value='8' onClick={handleNumber}>8</button>\r\n        <button className='numbers' id='nine' value='9' onClick={handleNumber}>9</button>\r\n        {/* ################################################## */}\r\n        <button className='function' id='subtract' value='-'\r\n          onClick={\r\n            operator === \"-\" && recentNum === \"-\"\r\n              ? \"\"\r\n              : operator === \"\" || operator === \"=\"|| recentNum !==\"\"\r\n              ? handleOperations\r\n              : handleNumber\r\n          }>\r\n          -\r\n        </button>\r\n        {/* ################################################# */}\r\n        <button className='numbers' id='four' value='4' onClick={handleNumber}>4</button>\r\n        <button className='numbers five' id='five' value='5' onClick={handleNumber}>5</button>\r\n        <button className='numbers six' id='six' value='6' onClick={handleNumber}>6</button>\r\n        <button className='function add' id='add' value='+'\r\n          onClick={handleOperations}>+</button>\r\n        <button className='numbers one' id='one' value='1' onClick={handleNumber}>1</button>\r\n        <button className='numbers two' id='two' value='2' onClick={handleNumber}>2</button>\r\n        <button className='numbers three' id='three' value='3' onClick={handleNumber}>3</button>\r\n        <button className='function equal span-2v' id='equals' value='=' onClick={handleEqual}>=</button>\r\n        <button className='numbers zero span-2' id='zero' value='0' onClick={handleNumber}>0</button>\r\n        <button className='numbers decimal' id='decimal' value='.' onClick={handleNumber}>.</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}