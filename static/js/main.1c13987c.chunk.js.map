{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["initialState","countAcc","recOper","reducer","state","action","operators","a","b","type","value","App","useState","previous","setPrevious","current","setCurrent","recentNum","setRecentNum","useReducer","subtotal","dispatch","handleNumber","target","pattern","RegExp","str","test","prev","toString","useEffect","ClearAllCleanup","ReplaceOperations","replace","SignSwitchTest","className","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c13987c.chunk.js","sourcesContent":["import React, { useEffect, useState, useReducer } from \"react\";\nimport \"./App.css\";\n\nconst initialState = {\n  countAcc: 0,\n  recOper: \"\",\n};\nconst reducer = (state, action) => {\n  const operators = {\n    \"+\": function (a, b) {return a + b},\n    \"-\": function (a, b) {return a - b},\n    \"*\": function (a, b) {return a * b},\n    \"/\": function (a, b) {return a / b},\n  };\n  switch (action.type) {\n\n    case \"divide\":\n      return {\n        countAcc: state.recOper === \"\"\n            ? state.countAcc + action.value\n            : operators[state.recOper](state.countAcc, action.value),\n        recOper: \"/\",\n      };\n    case \"multiply\":\n      return {\n        countAcc: state.recOper === \"\"\n            ? state.countAcc + action.value\n            : operators[state.recOper](state.countAcc, action.value),\n        recOper: \"*\",\n      };\n    case \"subtract\":\n      return {\n        countAcc: state.recOper === \"\"\n            ? state.countAcc + action.value\n            : operators[state.recOper](state.countAcc, action.value),\n        recOper: \"-\",\n      };\n    case \"add\":\n      return {\n        countAcc: state.recOper === \"\"\n            ? state.countAcc + action.value\n            : operators[state.recOper](state.countAcc, action.value),\n        recOper: \"+\",\n      };\n    case \"equals\":\n      return {\n        countAcc: operators[state.recOper](state.countAcc, action.value),\n        recOper: \"\",\n      };\n    case \"erase\":\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  // previous and current are used in the displays, recentNum is a placeholder for the last number entered\n  // usereducer used for doing the math operations, it does the recent entered math and keeps the subtotal\n  // subtotal also holds the last math operation and takes care of equal and AllClear\n  const [previous, setPrevious] = useState(\"\");\n  const [current, setCurrent] = useState(\"0\");\n  const [recentNum, setRecentNum] = useState(\"\");\n  const [subtotal, dispatch] = useReducer(reducer, initialState);\n\n  const handleNumber = ({ target: { value } }) => {\n    let pattern = new RegExp(/^-?\\d+\\.?\\d*$/);\n    //if calculator is in initial state, when current = 0 & recentNum is empty, then overwrite the zero\n    //or also take care of when a number starts with a '-'\n    //test new input is valid\n    let str = current === \"0\" && recentNum === \"\"\n        ? value : value === \"-\"\n        ? value : current + value;\n\n    if (pattern.test(str) || str === \"-\") {\n      //test for initial state\n      if (subtotal.recOper === \"\" && recentNum === \"\" && current === \"0\") {\n        setCurrent(() => value);\n        setRecentNum(() => value);\n        // test for initial state after first zero\n      } else if (\n        subtotal.recOper === \"\" && recentNum === \"0\" && current === \"0\") {\n        setCurrent((prev) => (value === \".\" ? prev + value : prev));\n        setRecentNum((prev) => (value === \".\" ? prev + value : prev));\n        //initial state after an equals was executed\n        // disallow typing numbers AFTER an equal has been exectuted\n      } else if (subtotal.countAcc.toString() === current && recentNum === \"0\") {\n        return;\n      } else {\n        setCurrent((prev) => prev + value);\n        setRecentNum((prev) => prev + value);\n      }\n    \n    }\n  };\n\n  useEffect(() => {\n    //  If AC, clear all\n    if (subtotal.recOper === \"\" && subtotal.countAcc === 0) {\n      setPrevious(() => \"\");\n      ClearAllCleanup();\n\n      //if equal, add \"\" and total to end of previous display,\"\" is flag\n    } else if (subtotal.recOper === \"\" && subtotal.countAcc !== \"\") {\n      setPrevious((prev) => prev + `${recentNum}=${subtotal.countAcc}`);\n      setCurrent(() => `${subtotal.countAcc}`);\n      setRecentNum(() => \"0\");\n\n      // this is for operations AFTER the equal has been done\n    } else if (subtotal.recOper !== \"\" && recentNum === \"0\") {\n      setPrevious(`${subtotal.countAcc}${subtotal.recOper}`);\n      setCurrent(() => \"\");\n      setRecentNum(() => \"\");\n    } else {\n      //normal operation, when numbers operations added to previous\n      setPrevious((prev) => prev + `${recentNum}${subtotal.recOper}`);\n      setCurrent(() => \"\");\n      setRecentNum(() => \"\");\n    }\n  }, [subtotal]);\n\n//Used for cleaning up double operation signs\n  useEffect(() => {\n    ReplaceOperations();\n  }, [previous]);\n\n  const ReplaceOperations = () => {\n    setPrevious(\n      previous.replace(/[-/*]\\+/, \"+\").replace(/[-+*]\\//, \"/\").replace(/[-/+]\\*/, \"*\")\n    );\n  }\n\n  const ClearAllCleanup = () => {\n    setCurrent(() => \"0\");\n    setRecentNum(() => \"\");\n  };\n\n  // function called when consecutive operation signs are present, this part needed\n  //for when an operation needs to be sent to ussReducer and not change the subtotal amount\n  const SignSwitchTest =() => {\n    return (subtotal.recOper === \"-\" || subtotal.recOper === \"+\") ? 0 : 1;\n  }\n\n  return (\n    <div className='App'>\n    {/* Used in development\n      <br />\n      <br />\n      <br />\n      subtotal {subtotal.countAcc}\n      <br />\n      Recent operation {subtotal.recOper} <br />\n      Recent Number {recentNum} */}\n      <div className='grid-container'>\n        <div className='display display-main span-4'>{previous}</div>\n        <div className='display display-second span-4' id='display'>\n          {current}\n        </div>\n        <button className='function clear span-2' id='clear'\n          onClick={previous ? () => dispatch({ type: \"erase\" }) : ClearAllCleanup}>\n          AC\n        </button>\n        <button\n          className='function' id='divide'\n          onClick={recentNum === \"\"\n              ? () => dispatch({ type: \"divide\", value: SignSwitchTest() })\n              : () => dispatch({ type: \"divide\", value: recentNum === \"0\" ? 0 : +current })\n          }>\n          /\n        </button>\n        <button className='function' id='multiply'\n          onClick={recentNum === \"\"\n              ? () => dispatch({ type: \"multiply\", value: SignSwitchTest() })\n              : () => dispatch({ type: \"multiply\", value: recentNum === \"0\" ? 0 : +current })\n          }>\n          X\n        </button>\n        <button className='numbers' id='seven' value='7' onClick={handleNumber}>7</button>\n        <button className='numbers' id='eight' value='8' onClick={handleNumber}>8</button>\n        <button className='numbers' id='nine' value='9' onClick={handleNumber}>9</button>\n        {/* ################################################################# */}\n        <button className='function' id='subtract' value='-'\n          onClick={ recentNum === \"\"\n          ? handleNumber\n          : () => dispatch({ type: \"subtract\", value: recentNum === \"0\" ? 0 : +current })\n          }>\n          -\n        </button>\n        {/* ################################################################# */}\n        <button className='numbers' id='four' value='4' onClick={handleNumber}>4</button>\n        <button className='numbers five' id='five' value='5' onClick={handleNumber}>5</button>\n        <button className='numbers six' id='six' value='6' onClick={handleNumber}>6</button>\n        <button className='function add' id='add'\n          onClick={ recentNum === \"\"\n              ? () => dispatch({ type: \"add\", value: SignSwitchTest() })\n              : () => dispatch({ type: \"add\", value: recentNum === \"0\" ? 0 : +current })\n          }>\n          +\n        </button>\n        <button className='numbers one' id='one' value='1' onClick={handleNumber}>1</button>\n        <button className='numbers two' id='two' value='2' onClick={handleNumber}>2</button>\n        <button className='numbers three' id='three' value='3' onClick={handleNumber}>3</button>\n        <button className='function equal span-2v' id='equals' value='='\n        onClick={() => subtotal.recOper && dispatch({ type: \"equals\", value: +current })\n          }>\n          =\n        </button>\n        <button className='numbers zero span-2' id='zero' value='0' onClick={handleNumber}>0</button>\n        <button className='numbers decimal' id='decimal' value='.' onClick={handleNumber}>.</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}